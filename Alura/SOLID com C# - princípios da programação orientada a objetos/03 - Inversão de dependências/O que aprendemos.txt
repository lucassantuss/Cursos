O que aprendemos?

** Acoplamentos

- Acoplamento diz respeito à dependência entre dois tipos. 
Num sistema orientado a objetos os acoplamentos são inevitáveis. 
O que devemos fazer é cuidar de sua qualidade.

- Acoplamentos bons são aqueles para tipos estáveis (que não vão mudar 
ou tem alta probabilidade de não mudar). Candidatos a tipos estáveis 
são aqueles que fazem parte da plataforma .NET e de APIs muito usadas.

- Acoplamentos ruins são aqueles para tipos instáveis.
Exemplos dessa categoria são os tipos criados especificamente para nossa 
aplicação e principalmente implementações para mecanismos específicos 
(no nosso exemplo o LeilaoDaoComEfCore).

** Princípios e Conceitos

- Crie abstrações e dependa delas para melhorar a qualidade do acoplamento. 
Esse hábito é formalizado através do Princípio da Inversão das Dependências 
(DIP), a letra D na sigla S.O.L.I.D.

- Explicite as dependências de uma classe. 
Uma das maneiras de fazer isso é usando parâmetros do construtor. 
Desse jeito aplicamos um conceito chamado Injeção de Dependência (DI). 
AspNet Core ajuda a injetar as dependências que foram vinculadas no 
método ConfigureServices() da classe Startup e assim dizemos que o 
AspNet Core tem como uma de suas principais funcionalidades ser um 
container de injeção de dependências.

- Quando a classe dependente deixa de resolver as dependências diretamente 
e cede esse controle para outrém temos o uso do conceito Inversão de Controle (IoC).